{\rtf1 \mac \ansicpg437 \cocoartf102 {\fonttbl {\f0 \fnil \fcharset77 Times New Roman{\*\falt Times}
;}
{\f1 \fnil \fcharset77 Helvetica-Bold{\*\falt Helvetica}
;}
{\f2 \fnil \fcharset77 Helvetica;}
{\f3 \fnil \fcharset77 LucidaGrande{\*\falt Lucida Grande}
;}
}
{\colortbl ;\red0 \green0 \blue0 ;}
{\stylesheet {\*\cs335 {\*\nsmpltxt The quick brown fox jumped over the lazy dogs.}
\super footnote reference;}
{\*\cs336 {\*\nsmpltxt The quick brown fox jumped over the lazy dogs.}
\super endnote reference;}
{\s337 \nisusnoteplacement0 \nisusreferencestyle335 {\*\nsmpltxt Some text goes here so you can see what your style will look like.}
\f3 footnote text;}
{\s338 \nisusnoteplacement1 \nisusreferencestyle336 {\*\nsmpltxt Sample text for Foot/End Notes Style}
\f3 endnote text;}
}
\deftab720 \defformat \viewkind1 \viewzk1 {\*\nisuswindow \x70 \y194 \w741 \h638 }
\nshwinv0 \nshwpg1 \hyphauto0 \ftnnar \endnotes \aendnotes \aftnnar \fet2 \ftnbj \paperw12240 \paperh15840 \margl1440 \margr1440 \margt1440 \margb1440 \gutter0 \pgnstart1 \nocolbal \sectd \sbknone \cols1 \ltrsect \colbalsxn0 \marglsxn1440 \margrsxn1440 \margtsxn1440 \margbsxn1440 \guttersxn0 \headery720 \footery720 \pgnstarts1 \pgnrestart \pgndec \sxnstarts1 \sxnrestart \sxndec {\header \pard \ql \sb0 \sa0 \sl240 \slmult1 \ilvl0 \li0 \lin0 \fi0 \ri0 \rin0 \par }
{\footer \pard \ql \sb0 \sa0 \sl240 \slmult1 \ilvl0 \li0 \lin0 \fi0 \ri0 \rin0 \par }
{\pard \ql \sb0 \sa0 \sl240 \slmult1 \ilvl0 \li0 \lin0 \fi0 \ri0 \rin0 {\f1 \fs24 \b \cf1 LinkBack Release Notes\par
\f2 \b0 \par
\b LINKBACK 103: \tab (March 29, 2005)\par
\b0 \par
\b Missing Items:\b0   \par
The LinkBack badge mentioned in the documentation is not in the distribution yet.  Sorry.  This will be forthcoming.  \par
\par
\b Documentation:\b0   First draft of the LinkBack Developer\rquote s Guide.  Hey, its better than nothing.  \u9786 ?  Seriously though, I have not written many API docs.  Any feedback or suggested edits are greatly welcomed!\par
\par
\b TextEdit+LinkBack:\b0   Incorporates new framework API.  Pretty much this works as before though.  Notice the new edit menu item introduces in 102.\par
\b \par
LiveSketch:\b0   Incorporates new framework API.  Modified to use some new API so that it provides all the information needed to relaunch LiveSketch.  Also uses matches the new developer\rquote s guide for the window title.  \par
\par
\b Cool trick:\b0   Paste a LiveSketch graphic into the new version of TextEdit+LinkBack.  Then quit LiveSketch and move the app to the trash.  Now double-click the graphic in TextEdit+LinkBack.  After a few seconds, a dialog will show telling you that the LiveSketch application should not be found and offering to take you to a web-site to get the application.  This is great advertising for you!\par
\par
\b LinkBack:\b0  Now server applications can include a suggested refresh rate with their data.  Client applications can use this to implement automatic updating.  Currently there is no special API support for automatic updating, but this should not be hard for a client to implement.\par
 \par
\b LinkBack:\b0  Included change sent by Andrew Stone to fix the source application name included in LinkBack data.\par
\par
\b LinkBack: \b0 Added improved support for finding server applications if they are not running or if the wrong version is returned by NSWorkspace.  This code uses new keys you can add to your application\rquote s Info.plist to determine which version to launch.  It will search the standard directories.\par
\par
\b LINKBACK 102:\par
\b0 \par
\b LinkBack:\b0  LinkBack has several helper methods to make it easier for you to add a menu item in clients to edit LinkBack content.  Two functions and one method provide the localized string for the menu name.  You should place the menu at the bottom of your edit menu with a separator before it.  Make your validateMenuItem: set the menu title based on the current selection.  You should set your title based on the number of LinkBack items selected:\par
\par
}
}
{\pard \ql \sb0 \sa0 \sl240 \slmult1 \ilvl0 \li0 \lin0 \fi0 \ri0 \rin0 \tqc \tx2520 \tx4820 {\f2 \fs24 \b0 \cf1 \tab \b LINKBACK \par
}
}
{\pard \ql \sb0 \sa0 \sl240 \slmult1 \ilvl0 \li0 \lin0 \fi0 \ri0 \rin0 \tqc \tx2520 \tx4300 {\f2 \fs24 \b \cf1 \tab ITEMS SELECTED\tab USE METHOD/FUNCTION\par
\b0 \tab 0\tab LinkBackEditNoneMenuTitle() \par
\tab 1\tab [linkbackdata linkBackMenuTitle] ;\par
\tab > 1\tab LinkBackEditMultipleMenuTitle()\par
}
}
{\pard \ql \sb0 \sa0 \sl240 \slmult1 \ilvl0 \li0 \lin0 \fi0 \ri0 \rin0 {\f2 \fs24 \b0 \cf1 \par
When the user chooses this menu item, your code should request edits for any selected LinkBack items.  If no LinkBack items are selected, be sure to disable the menu. \par
\par
See Document.m in TextEdit+LinkBack for an example of how to do all this.\par
\par
\b LinkBack:\b0  LinkBack now includes the name of the application and an optional ACTION NAME in the data you place on the keyboard.  You can provide the action name or use one of the two standard action names defined in LinkBack.h.  This action name will be used to construct the LinkBack menu name in client applications.  If you use one of the standard names, (Edit or Refresh) it will be localized.\par
\par
\b LinkBack:\b0  Added a new NSDictionary category with methods for creating and accessing the linkback data you create to put on the pasteboard.  You can still use the original functions to create linkback data, but using these methods will give you access to more information about the LinkBack including the source application, action name, source URL and so on.\par
\par
\b LiveSketch:\b0   now includes Linkback information in its application dictionary.  Will be used by LinkBack in the future.\par
\par
\b TextEdit+LinkBack:\b0  now includes support for the an Edit LinkBack Items menu.  See Document.m -validateMenuItem: and -editLinkBackItems: for examples of how to do this.\par
\par
\b LINKBACK 101\b0 \par
LinkBack: version number included in linkback data \par
\par
LiveSketch: SKTGraphicView.m:1067 -- LiveSketch did not declare the LinkBackPboardType during a copy operation.  This did not cause incorrect behavior, but it was technically incorrect.\par
 \par
1.0alpha -- initial public release}
}
}
